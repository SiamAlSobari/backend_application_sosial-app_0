// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @unique @default(uuid())
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  profile    Profile?
  post       Post[]

  sendRequest     FriendRequest[] @relation("SenderRequest")
  receiverRequest FriendRequest[] @relation("ReceiverRequest")
}

model FriendRequest {
  id          String              @id @unique @default(uuid())
  status      FriendRequestStatus @default(PENDING)
  created_at  DateTime            @default(now())
  sender_id   String
  receiver_id String

  sender   User @relation("SenderRequest", fields: [sender_id], references: [id])
  receiver User @relation("ReceiverRequest", fields: [receiver_id], references: [id])

  @@unique([sender_id, receiver_id])
}

enum FriendRequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}

model Profile {
  id           String  @id @unique @default(uuid())
  user_name    String  @unique
  name         String
  bio          String? @db.Text
  pekerjaan    String?
  pendidikan   String?
  alamat       String?
  gender       String?
  website      String?
  is_public    Boolean @default(true)
  avatar_image String  @default("https://hwchamber.co.uk/wp-content/uploads/2022/04/avatar-placeholder.gif")
  cover_image  String  @default("https://img.freepik.com/free-photo/smooth-black-paper-textured-background_53876-160610.jpg?semt=ais_hybrid&w=740")
  user_id      String  @unique
  user         User    @relation(fields: [user_id], references: [id])
}

model Post {
  id         String   @id @unique @default(uuid())
  caption    String?  @db.Text
  created_at DateTime @default(now())
  user_id    String
  user       User     @relation(fields: [user_id], references: [id])
  media      Media[]
}

model Media {
  id      String  @id @unique @default(uuid())
  url     String
  type    String?
  post_id String
  post    Post    @relation(fields: [post_id], references: [id])
}
